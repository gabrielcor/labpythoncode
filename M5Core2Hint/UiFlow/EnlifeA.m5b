{"category":"EnlifeA","color":"#333333","blocks":["__EnlifeA_init","__EnlifeA_get_formatted_time"],"jscode":"// Block __EnlifeA_init\nvar __EnlifeA_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"enlifea init\"\n        }\n    ],\n    \"colour\": \"#333333\"\n};\n\nwindow['Blockly'].Blocks['__EnlifeA_init'] = {\n    init: function() {\n        this.jsonInit(__EnlifeA_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__EnlifeA_init'] = function(block) {\n        return `def formattime(hrs,mins,secs):\n  temp = \"{:00}:{:02}:{:02}\".format(int(hrs), mins, secs)\n  return temp\n` + \"\\n\";\n};\n\n// Block __EnlifeA_get_formatted_time\nvar __EnlifeA_get_formatted_time_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"get_time\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"hrs\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"hrs\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"mins\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"mins\"\n        }\n    ],\n    \"message3\": \"%1 %2\",\n    \"args3\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"secs\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"secs\"\n        }\n    ],\n    \"colour\": \"#333333\"\n};\n\nwindow['Blockly'].Blocks['__EnlifeA_get_formatted_time'] = {\n    init: function() {\n        this.jsonInit(__EnlifeA_get_formatted_time_json);\n    }\n};\n\nwindow['Blockly'].Python['__EnlifeA_get_formatted_time'] = function(block) {\n    var hrs = Blockly.Python.valueToCode(block, 'hrs', Blockly.Python.ORDER_NONE);\nvar mins = Blockly.Python.valueToCode(block, 'mins', Blockly.Python.ORDER_NONE);\nvar secs = Blockly.Python.valueToCode(block, 'secs', Blockly.Python.ORDER_NONE);\n    return [`formattime(${hrs},${mins},${secs})\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","code":{"init":["window['Blockly'].Python['__EnlifeA_init'] = function(block) {\n        return `def formattime(hrs,mins,secs):\n  temp = \"{:00}:{:02}:{:02}\".format(int(hrs), mins, secs)\n  return temp\n` + \"\\n\";\n};\n\n","def formattime(hrs,mins,secs):\n  temp = \"{:00}:{:02}:{:02}\".format(int(hrs), mins, secs)\n  return temp\n"],"get_formatted_time":["window['Blockly'].Python['__EnlifeA_get_formatted_time'] = function(block) {\n    var hrs = Blockly.Python.valueToCode(block, 'hrs', Blockly.Python.ORDER_NONE);\nvar mins = Blockly.Python.valueToCode(block, 'mins', Blockly.Python.ORDER_NONE);\nvar secs = Blockly.Python.valueToCode(block, 'secs', Blockly.Python.ORDER_NONE);\n    return [`formattime(${hrs},${mins},${secs})\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","formattime(${hrs},${mins},${secs})\n"]}}